# Generated by Django 4.2.4 on 2024-02-26 14:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Yosh')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon raqam')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('lavozimi', models.CharField(choices=[('Nurse', 'Nurse'), ('Doctor', 'Doctor'), ('Manager', 'Manager'), ('Admin', 'Admin')], max_length=55, verbose_name='lavozim')),
                ('birth_date', models.DateField(verbose_name='Your birthday')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Phone_Number')),
                ('email', models.EmailField(max_length=254, verbose_name=django.core.validators.RegexValidator(code='Invalid email', message='Invalide email', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'))),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Famale', 'Famale')], max_length=55, verbose_name='Gender')),
                ('salary', models.BigIntegerField(verbose_name='Salary')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('type', models.CharField(max_length=255, verbose_name='Type')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('created', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
            },
        ),
        migrations.CreateModel(
            name='Kassa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('date', models.DateTimeField(verbose_name='Time')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Name')),
                ('birth_date', models.DateField(verbose_name='Birth date')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Phone_Number')),
                ('illnes', models.CharField(max_length=255, verbose_name='Illnes')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Famale', 'Famale')], max_length=55, verbose_name='Gender')),
                ('created', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.employee', verbose_name='Doctor')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Specialty name')),
            ],
            options={
                'verbose_name': 'Specialty',
                'verbose_name_plural': 'Specialtys',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.CharField(choices=[('Good', 'Good'), ('Excellent', 'Excellent'), ('Bad', 'Bad')], max_length=25, verbose_name='Rate')),
                ('message', models.CharField(max_length=255, null=True, verbose_name='Message')),
                ('created', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='Room Name')),
                ('status', models.CharField(choices=[('Ekonom', 'Ekonom'), ('Lux', 'Lux')], max_length=20, null=True, verbose_name='Status')),
                ('capacity', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Capacity')),
                ('type', models.CharField(max_length=255, verbose_name='Type')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.department', verbose_name='Department')),
                ('equipment', models.ManyToManyField(to='main.equipment', verbose_name='Equipment')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('date', models.DateField(null=True, verbose_name='Date')),
                ('type', models.CharField(choices=[('Click', 'Click'), ('Cash', 'Cash')], max_length=20, verbose_name='type')),
                ('status', models.CharField(choices=[('full pay', 'full pay'), ('average pay', 'average pay'), ('unpaid', 'unpaid')], max_length=20, verbose_name='status')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Operation Name')),
                ('date', models.DateField(verbose_name='Operation date')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Operation price')),
                ('employees', models.ManyToManyField(to='main.employee', verbose_name='Doctors')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Operation',
                'verbose_name_plural': 'Operations',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='mutahasisligi',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.specialty', verbose_name='Mutahasisligi'),
        ),
        migrations.AddField(
            model_name='employee',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.room', verbose_name='Room'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='ClinicStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Clinic Name')),
                ('date', models.DateField(auto_now=True)),
                ('employee', models.ManyToManyField(to='main.employee', verbose_name='Employee')),
                ('operation', models.ManyToManyField(to='main.operation', verbose_name='Operations')),
                ('patients', models.ManyToManyField(to='main.patient', verbose_name='Patients')),
                ('room', models.ManyToManyField(to='main.room', verbose_name='Rooms')),
            ],
            options={
                'verbose_name': 'ClinicStatistic',
                'verbose_name_plural': 'ClinicStatistics',
            },
        ),
        migrations.CreateModel(
            name='Circulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('date', models.DateField(null=True, verbose_name='Date')),
                ('details', models.CharField(max_length=255, verbose_name='Details')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Circulation',
                'verbose_name_plural': 'Circulations',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('chek_in', models.TimeField(blank=True, null=True)),
                ('chek_out', models.TimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.employee')),
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendances',
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
